import{_ as s,c as a,o as i,a5 as n}from"./chunks/framework.DwbewbAn.js";const b=JSON.parse('{"title":"云服务器","description":"","frontmatter":{},"headers":[],"relativePath":"article/云服务器部署.md","filePath":"article/云服务器部署.md","lastUpdated":1709650937000}'),l={name:"article/云服务器部署.md"},e=n(`<h1 id="云服务器" tabindex="-1">云服务器 <a class="header-anchor" href="#云服务器" aria-label="Permalink to &quot;云服务器&quot;">​</a></h1><h2 id="一-购买云服务器" tabindex="-1">一. 购买云服务器 <a class="header-anchor" href="#一-购买云服务器" aria-label="Permalink to &quot;一. 购买云服务器&quot;">​</a></h2><h3 id="_1-1-注册阿里云的账号" tabindex="-1">1.1. 注册阿里云的账号 <a class="header-anchor" href="#_1-1-注册阿里云的账号" aria-label="Permalink to &quot;1.1. 注册阿里云的账号&quot;">​</a></h3><p>云服务器我们可以有很多的选择：阿里云、腾讯云、华为云。</p><ul><li>目前在公司使用比较多的是阿里云；</li><li>我自己之前也一直使用阿里云，也在使用腾讯云；</li><li>之前华为云也有找我帮忙推广他们的活动；</li></ul><p>但是在我们的课程中，我选择目前使用更加广泛的阿里云来讲解：</p><p>我们需要注册阿里云账号</p><ul><li><p><a href="https://aliyun.com/" target="_blank" rel="noreferrer">https://aliyun.com/</a></p></li><li><p>注册即可，非常简单</p></li></ul><h3 id="_1-2-购买云服务器" tabindex="-1">1.2. 购买云服务器 <a class="header-anchor" href="#_1-2-购买云服务器" aria-label="Permalink to &quot;1.2. 购买云服务器&quot;">​</a></h3><p>购买云服务器其实是购买一个实例。</p><p>1.来到控制台：</p><p>2.创建实例，选择类型和配置</p><p>3.配置网络安全组</p><p>4.创建实例</p><h2 id="二-配置云服务器" tabindex="-1">二. 配置云服务器 <a class="header-anchor" href="#二-配置云服务器" aria-label="Permalink to &quot;二. 配置云服务器&quot;">​</a></h2><h3 id="_2-1-连接云服务器" tabindex="-1">2.1. 连接云服务器 <a class="header-anchor" href="#_2-1-连接云服务器" aria-label="Permalink to &quot;2.1. 连接云服务器&quot;">​</a></h3><p>通常情况下，我们会通过 ssh 连接云服务器：</p><ul><li>Windows 电脑上我推荐直接使用 git bash ssh 工具；</li><li>Mac OS 电脑上我们可以直接通过终端来使用 ssh 工具；</li></ul><p><img src="https://img.xbin.cn/images/2023/10/16-20-19-9f052b.png" alt="image-20231016201930478"></p><p>知识点补充：如果在计算机中想要更改主机名</p><ul><li>修改之后需要重启服务器</li></ul><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hostnamectl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --static</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> set-hostname</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> coderwhy</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="_2-2-安装-node-js" tabindex="-1">2.2. 安装 Node.js <a class="header-anchor" href="#_2-2-安装-node-js" aria-label="Permalink to &quot;2.2. 安装 Node.js&quot;">​</a></h3><p>我们安装软件使用工具：dnf</p><ul><li><strong>DNF</strong>，全称<strong>Dandified（时髦的、华丽的） Yum</strong>；</li><li>是 Yum 的下一个版本，也被称之为 Yum 的替代品；</li><li>如果是 centos7 的版本，我记得是没有自带 dnf 的，需要通过 yum 进行安装（这个自行安装一下）；</li><li>刚才在选择云服务器时，我选择的是 centos8，所以是自带 dnf 的；</li></ul><p>检查 dnf 是否可用：</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dnf</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --help</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>如果我们希望安装一个软件包，可以进行如下的操作：</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 搜索软件包</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dnf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> search</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nodejs</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 查看软件包信息: nodejs的版本是10.21.0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dnf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> info</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nodejs</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 安装nodejs</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dnf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nodejs</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>如果发现不是你希望使用的版本：</p><ul><li>使用更高的版本，比如最新的 LTS 或者 Current 版本；</li><li>这个时候我们可以使用之前讲过的一个工具：n；</li></ul><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 安装n</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> n</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -g</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 通过n安装最新的lts和current</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> lts</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> latest</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 通过n切换版本</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">n</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>如果发现切换之后终端没有反应，可以进行重启：</p><ul><li>方式一：重新通过 ssh 建立连接；</li><li>方式二：重启 ssh <code>service sshd restart</code></li></ul><h3 id="_2-3-安装-mysql" tabindex="-1">2.3. 安装 MySQL <a class="header-anchor" href="#_2-3-安装-mysql" aria-label="Permalink to &quot;2.3. 安装 MySQL&quot;">​</a></h3><h4 id="_2-3-1-安装-mysql" tabindex="-1">2.3.1. 安装 MySQL <a class="header-anchor" href="#_2-3-1-安装-mysql" aria-label="Permalink to &quot;2.3.1. 安装 MySQL&quot;">​</a></h4><p>我们依然使用 dnf 来安装 MySQL：</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 查找MySQL</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dnf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> search</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mysql-server</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 查看MySQL，这里的版本是8.0.30</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dnf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> info</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mysql-server</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 安装MySQL，这里加-y的意思是依赖的内容也安装</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dnf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mysql-server</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -y</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>启动 mysql-server：</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 开启MySQL后台服务</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mysqld</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 查看MySQL服务：active (running)表示启动成功</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> status</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mysqld</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 随着系统一起启动</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> enable</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mysqld</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h4 id="_2-3-2-配置-mysql" tabindex="-1">2.3.2. 配置 MySQL <a class="header-anchor" href="#_2-3-2-配置-mysql" aria-label="Permalink to &quot;2.3.2. 配置 MySQL&quot;">​</a></h4><p>我们之前在 Mac 或者 Windows 上安装 MySQL 时会有一些配置：</p><ul><li>比如账号密码；</li><li>在 centos 中通过 dnf 安装之后，我们如何配置账号密码呢？</li></ul><p>配置 MySQL 账号和密码：</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mysql_secure_installation</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 接下来有一些选项，比如密码强度等等一些</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># MySQL8开始通常设置密码强度较强，选择2</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 其他的选项可以自行选择</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>现在，我们就可以直接在服务器中操作 MySQL 了：</p><p>但是如果我们希望在自己的电脑上直接连接 MySQL 呢？</p><ul><li>也就是和 MySQL 建立远程连接；</li><li>比如直接 Navicat 工具中连接 MySQL；</li></ul><p>这个时候必须要配置 root 可以远程连接：</p><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 使用mysql数据库</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">use</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mysql;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 查看user表中，连接权限，默认看到root是localhost</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">select</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> host, user </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> user;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 修改权限</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">update</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> user </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> host </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;%&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> user </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;root&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 配置生效</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">FLUSH PRIVILEGES;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>但是呢，阿里云默认有在安全组中禁止掉 3306 端的连接的：</p><ul><li>所以我们需要配置 3306 的安全组</li></ul><p><img src="https://img.xbin.cn/images/2023/10/16-20-20-e079b2.png" alt="image-20231016202019345"></p><h4 id="_2-3-3-数据库迁移" tabindex="-1">2.3.3. 数据库迁移 <a class="header-anchor" href="#_2-3-3-数据库迁移" aria-label="Permalink to &quot;2.3.3. 数据库迁移&quot;">​</a></h4><p>我们需要将之前项目中（本地）MySQL 的数据库迁移到服务器中的 MySQL 数据库中。</p><p><strong>第一步：在服务器 MySQL 中创建 coderhub 的数据库：</strong></p><ul><li>可以通过命令，也可以通过 Navicat 直接创建</li></ul><p><strong>第二步：在 Navicat 工具中本地 MySQL 直接导出数据库</strong></p><p><img src="https://img.xbin.cn/images/2023/10/16-20-20-77e1cc.png" alt="image-20231016202047153"></p><p><strong>第三步：在 Navicat 工具中服务器 MySQL 中执行 MySQL</strong></p><p><img src="https://img.xbin.cn/images/2023/10/16-20-21-69e9bf.png" alt="image-20231016202113368"></p><h2 id="三-部署-node-项目" tabindex="-1">三. 部署 Node 项目 <a class="header-anchor" href="#三-部署-node-项目" aria-label="Permalink to &quot;三. 部署 Node 项目&quot;">​</a></h2><h3 id="_3-1-代码托管到-git-仓库-选做" tabindex="-1">3.1. 代码托管到 Git 仓库（选做） <a class="header-anchor" href="#_3-1-代码托管到-git-仓库-选做" aria-label="Permalink to &quot;3.1. 代码托管到 Git 仓库（选做）&quot;">​</a></h3><p>在 GitHub 中创建仓库，并且将当前代码放到 GitHub 中</p><p>添加.gitignore 文件时，忽略一些文件：</p><ul><li>忽略 uploads</li><li>忽略.env</li></ul><p>这里不再给出详细的步骤，就是把代码托管到 GitHub 上。</p><h3 id="_3-2-代码-clone-到服务器-选做" tabindex="-1">3.2. 代码 clone 到服务器（选做） <a class="header-anchor" href="#_3-2-代码-clone-到服务器-选做" aria-label="Permalink to &quot;3.2. 代码 clone 到服务器（选做）&quot;">​</a></h3><p>服务器我们使用 Git 来 clone 代码：</p><ul><li>centos8 服务器中默认是没有安装 Git 的；</li><li>我们可以通过 dnf 来安装；</li></ul><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dnf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> search</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dnf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> info</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 当然你也可以直接安装（上面两个只是让大家看一下Git的详情）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dnf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>我们可以在根目录下创建一个自己的文件夹，比如 why</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkdir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> why</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> why/</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>clone 项目到 why 中：</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/coderwhy/coderhub.git</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="_3-3-vscode-中打开代码" tabindex="-1">3.3. VSCode 中打开代码 <a class="header-anchor" href="#_3-3-vscode-中打开代码" aria-label="Permalink to &quot;3.3. VSCode 中打开代码&quot;">​</a></h3><p>如果我们希望在本地的 VSCode 中可以直接编辑远程的代码，可以使用一个 VSCode 的插件：remote-ssh</p><p><img src="https://img.xbin.cn/images/2023/10/16-20-22-fe2360.png" alt="image-20231016202202069"></p><p>连接远程服务器：</p><p><img src="https://img.xbin.cn/images/2023/10/16-20-22-1e88a5.png" alt="image-20231016202223633"></p><p>查看远程的项目代码：</p><p><img src="https://img.xbin.cn/images/2023/10/16-20-23-fe70e2.png" alt="image-20231016202309951"></p><p>安装项目的依赖：</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>配置.env 文件</p><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">APP_HOST</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http://121.4.125.213/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">APP_PORT</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 51011</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MYSQL_HOST</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> localhost</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MYSQL_PORT</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3306</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MYSQL_DATABASE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> coderhub</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MYSQL_USER</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> root</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MYSQL_PASSWORD</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Coderwhy888.</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>注意：加入 51011 端口到安全组中</p><p><img src="https://img.xbin.cn/images/2023/10/16-20-24-fee407.png" alt="image-20231016202019345"></p><p>测试请求的结果：</p><p><img src="https://img.xbin.cn/images/2023/10/16-20-24-9b8e76.png" alt="image-20231016202458236"></p><h3 id="_3-4-pm2-启动-node-程序" tabindex="-1">3.4. pm2 启动 node 程序 <a class="header-anchor" href="#_3-4-pm2-启动-node-程序" aria-label="Permalink to &quot;3.4. pm2 启动 node 程序&quot;">​</a></h3><p>刚才我们是通过终端启动的 node 程序，那么如果终端被关闭掉了呢？</p><ul><li>那么这个时候相当于启动的 Node 进程会被关闭掉；</li><li>我们将无法继续访问服务器；</li></ul><p>在真实的部署过程中，我们会使用一个工具 pm2 来管理 Node 的进程：</p><ul><li>PM2 是一个 Node 的进程管理器；</li><li>我们可以使用它来管理 Node 的后台进程；</li><li>这样在关闭终端时，Node 进程会继续执行，那么服务器就可以继续为前端提供服务了；</li></ul><p>安装 pm2：</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pm2</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -g</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>pm2 常用的命令：</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 命名进程</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pm2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> app.js</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my-api</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 显示所有进程状态</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pm2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> list</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 停止指定的进程</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pm2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> stop</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 停止所有进程</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pm2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> stop</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> all</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 重启所有进程</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pm2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> restart</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> all</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 重启指定的进程</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pm2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> restart</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 杀死指定的进程</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pm2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> delete</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 杀死全部进程</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pm2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> delete</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> all</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#后台运行pm2，启动4个app.js，实现负载均衡</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pm2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> app.js</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div>`,99),p=[e];function h(t,r,k,d,c,g){return i(),a("div",null,p)}const o=s(l,[["render",h]]);export{b as __pageData,o as default};
